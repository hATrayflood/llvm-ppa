.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "SCAN\-BUILD" "1" "December 2010" "" ""
.
.SH "NAME"
\fBscan\-build\fR
.
.P
scan\-build(1) \-\- An utility for running the clang(1) analyzer from the command line
.
.SH "SYNOPSIS"
\fBscan\-build\fR \fIoptions\fR \fIbuild command\fR [build options]
.
.SH "DESCRIPTION"
\fBscan\-build\fR is a command line utility that enables a user to run the clang static analyzer over their codebase as part of performing a regular build (from the command line)\.
.
.SH "OPTIONS"
.
.TP
\fB\-analyze\-headers\fR
Also analyze functions in #included files\.
.
.TP
\fB\-o\fR
Target directory for HTML report files\. Subdirectories will be created as needed to represent separate "runs" of the analyzer\. If this option is not specified, a directory is created in /tmp (TMPDIR on Mac OS X) to store the reports\.
.
.TP
\fB\-h\fR, \fB\-\-help\fR
Display the help message\.
.
.TP
\fB\-k\fR
Add a "keep on going" option to the specified build command\.
.
.TP
\fB\-\-keep\-going\fR
This option currently supports make and xcodebuild\. This is a convenience option; one can specify this behavior directly using build options\.
.
.TP
\fB\-\-html\-title\fR [title]
Specify the title used on generated HTML pages\.
.
.TP
\fB\-\-html\-title=\fR[title]
If not specified, a default title will be used\.
.
.TP
\fB\-plist\fR
By default the output of scan\-build is a set of HTML files\. This option outputs the results as a set of \.plist files\.
.
.TP
\fB\-\-status\-bugs\fR
By default, the exit status of scan\-build is the same as the executed build command\. Specifying this option causes the exit status of scan\-build to be 1 if it found potential bugs and 0 otherwise\.
.
.TP
\fB\-\-use\-cc\fR [compiler path]
By default, scan\-build uses \'gcc\' to compile and link
.
.TP
\fB\-\-use\-cc=\fR[compiler path]
your C and Objective\-C code\. Use this option to specify an alternate compiler\.
.
.TP
\fB\-\-use\-c++\fR [compiler path]
By default, scan\-build uses \'g++\' to compile and link
.
.TP
\fB\-\-use\-c++=\fR[compiler path]
your C++ and Objective\-C++ code\. Use this option to specify an alternate compiler\.
.
.TP
\fB\-v\fR
Verbose output from scan\-build and the analyzer\. A second and third \'\-v\' increases verbosity\.
.
.TP
\fB\-V\fR
View analysis results in a web browser when the build
.
.TP
\fB\-\-view\fR
completes\.
.
.SH "ADVANCED OPTIONS:"
.
.TP
\fB\-constraints\fR [model]
Specify the contraint engine used by the analyzer\. By default the \'range\' model is used\. Specifying \'basic\' uses a simpler, less powerful constraint model used by checker\-0\.160 and earlier\.
.
.TP
\fB\-store\fR [model]
Specify the store model used by the analyzer\. By default, the \'region\' store model is used\. \'region\' specifies a field sensitive store model\. Users can also specify \'basic\', which is far less precise but can more quickly analyze code\. \'basic\' was the default store model for checker\-0\.221 and earlier\.
.
.TP
\fB\-no\-failure\-reports\fR
Do not create a \'failures\' subdirectory that includes analyzer crash reports and preprocessed source files\.
.
.SH "EXAMPLES"
Basic usage of scan\-build is designed to be simple: just place the word "scan\-build" in front of your build command:
.
.P
$ scan\-build make
.
.P
$ scan\-build xcodebuild
.
.P
In the first case scan\-build analyzes the code of a project built with make and in the second case scan\-build analyzes a project built using xcodebuild\.
.
.P
It is also possible to use scan\-build to analyze specific files:
.
.P
$ scan\-build gcc \-c t1\.c t2\.c
.
.P
This example causes the files t1\.c and t2\.c to be analyzed\.
.
.SH "AUTHORS"
Maintained by the Clang / LLVM Team \fIhttp://clang\.llvm\.org\fR\.
.
.P
This manual page was written by Ermenegildo Fiorito \fIfiorito\.g@gmail\.com\fR for the Debian Project\.
.
.SH "SEE ALSO"
clang(1) scan\-view(1) \fIhttp://clang\-analyzer\.llvm\.org\fR
