Index: llvm-toolchain-3.3-3.3/clang/test/CodeGen/linux-arm-atomic.c
===================================================================
--- llvm-toolchain-3.3-3.3.orig/clang/test/CodeGen/linux-arm-atomic.c	2013-09-25 18:23:43.000000000 +0200
+++ llvm-toolchain-3.3-3.3/clang/test/CodeGen/linux-arm-atomic.c	2013-09-25 18:23:42.000000000 +0200
@@ -1,5 +1,6 @@
 // RUN: %clang_cc1 %s -emit-llvm -o - -triple=armv7-unknown-linux | FileCheck %s
 // RUN: %clang_cc1 %s -emit-llvm -o - -triple=armv6-unknown-linux | FileCheck %s
+// RUN: %clang_cc1 %s -emit-llvm -o - -triple=thumbv7-unknown-linux | FileCheck %s
 
 typedef int _Atomic_word;
 _Atomic_word exchange_and_add(volatile _Atomic_word *__mem, int __val) {
Index: llvm-toolchain-3.3-3.3/clang/lib/Basic/Targets.cpp
===================================================================
--- llvm-toolchain-3.3-3.3.orig/clang/lib/Basic/Targets.cpp	2013-09-25 18:23:43.000000000 +0200
+++ llvm-toolchain-3.3-3.3/clang/lib/Basic/Targets.cpp	2013-09-25 18:23:42.000000000 +0200
@@ -3588,9 +3588,23 @@
     if (T.getOS() != llvm::Triple::Linux)
      return false;
     StringRef ArchName = T.getArchName();
-    if (ArchName.startswith("armv6") || ArchName.startswith("armv7"))
-      return true;
-    return false;
+    if (T.getArch() == llvm::Triple::arm) {
+      if (!ArchName.startswith("armv"))
+        return false;
+      StringRef VersionStr = ArchName.substr(4);
+      unsigned Version;
+      if (VersionStr.getAsInteger(10, Version))
+        return false;
+      return Version >= 6;
+    }
+    assert(T.getArch() == llvm::Triple::thumb);
+    if (!ArchName.startswith("thumbv"))
+      return false;
+    StringRef VersionStr = ArchName.substr(6);
+    unsigned Version;
+    if (VersionStr.getAsInteger(10, Version))
+      return false;
+    return Version >= 7;
   }
 
 public:
