Index: llvm-3.1-3.1~+rc3/include/llvm/Support/FileSystem.h
===================================================================
--- llvm-3.1-3.1~+rc3.orig/include/llvm/Support/FileSystem.h	2012-05-20 16:17:36.990257554 +0200
+++ llvm-3.1-3.1~+rc3/include/llvm/Support/FileSystem.h	2012-05-20 16:17:56.762257305 +0200
@@ -99,8 +99,8 @@
 class file_status
 {
   #if defined(LLVM_ON_UNIX)
-  dev_t st_dev;
-  ino_t st_ino;
+  dev_t fs_st_dev;
+  ino_t fs_st_ino;
   #elif defined (LLVM_ON_WIN32)
   uint32_t LastWriteTimeHigh;
   uint32_t LastWriteTimeLow;
Index: llvm-3.1-3.1~+rc3/lib/Support/Unix/PathV2.inc
===================================================================
--- llvm-3.1-3.1~+rc3.orig/lib/Support/Unix/PathV2.inc	2012-05-20 16:17:36.990257554 +0200
+++ llvm-3.1-3.1~+rc3/lib/Support/Unix/PathV2.inc	2012-05-20 16:17:56.762257305 +0200
@@ -285,8 +285,8 @@
 
 bool equivalent(file_status A, file_status B) {
   assert(status_known(A) && status_known(B));
-  return A.st_dev == B.st_dev &&
-         A.st_ino == B.st_ino;
+  return A.fs_st_dev == B.fs_st_dev &&
+         A.fs_st_ino == B.fs_st_ino;
 }
 
 error_code equivalent(const Twine &A, const Twine &B, bool &result) {
@@ -340,8 +340,8 @@
   else
     result = file_status(file_type::type_unknown);
 
-  result.st_dev = status.st_dev;
-  result.st_ino = status.st_ino;
+  result.fs_st_dev = status.st_dev;
+  result.fs_st_ino = status.st_ino;
 
   return error_code::success();
 }
