description = "Low Level Virtual Machine bindings"
version = "@UVERSION@"

directory = "+llvm-@UVERSION@"

archive(byte)   = "llvm.cma"
archive(native) = "llvm.cmxa"
linkopts = "-cclib -lstdc++ -cclib -lllvm"

package "executionengine"
(
  requires = "llvm-@UVERSION_UNDERSCORE@"
  version = "@UVERSION@"
  archive(native) = "llvm_executionengine.cmxa"
  archive(byte)   = "llvm_executionengine.cma"
  linkopts = "-cclib -lllvm_executionengine"
)

package "target"
(
  requires = "llvm-@UVERSION_UNDERSCORE@"
  version = "@UVERSION@"
  archive(native) = "llvm_target.cmxa"
  archive(byte)   = "llvm_target.cma"
  linkopts = "-cclib -lllvm_target"
)

package "scalar_opts"
(
  requires = "llvm-@UVERSION_UNDERSCORE@ llvm-@UVERSION_UNDERSCORE@.target"
  version = "@UVERSION@"
  archive(native) = "llvm_scalar_opts.cmxa"
  archive(byte)   = "llvm_scalar_opts.cma"
  linkopts = "-cclib -lllvm_scalar_opts"
)

package "analysis"
(
  requires = "llvm-@UVERSION_UNDERSCORE@"
  version = "@UVERSION@"
  archive(native) = "llvm_analysis.cmxa"
  archive(byte)   = "llvm_analysis.cma"
  linkopts = "-cclib -lllvm_analysis"
)

package "bitwriter"
(
  requires = "llvm-@UVERSION_UNDERSCORE@"
  version = "@UVERSION@"
  archive(native) = "llvm_bitwriter.cmxa"
  archive(byte)   = "llvm_bitwriter.cma"
  linkopts = "-cclib -lllvm_bitwriter"
)

package "bitreader"
(
  requires = "llvm-@UVERSION_UNDERSCORE@ llvm-@UVERSION_UNDERSCORE@.bitwriter"
  version = "@UVERSION@"
  archive(native) = "llvm_bitreader.cmxa"
  archive(byte)   = "llvm_bitreader.cma"
  linkopts = "-cclib -lllvm_bitreader"
)

