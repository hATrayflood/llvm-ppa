#!/usr/bin/make -f

TARGET_BUILD	:= build-clang
GCC_VERSION     := 4.6
LLVM_VERSION	:= 3.2
SONAME_EXT      := 1
DEBIAN_REVISION := $(shell dpkg-parsechangelog | sed -rne 's,^Version: .*-(.*),\1,p')
ifneq (,$(filter parallel=%,$(subst $(COMMA), ,$(DEB_BUILD_OPTIONS))))
  NJOBS := -j $(subst parallel=,,$(filter parallel=%,$(subst $(COMMA), ,$(DEB_BUILD_OPTIONS))))
else
    NCPUS := $(shell getconf _NPROCESSORS_ONLN 2>/dev/null || echo 1)
    NJOBS := -j $(shell if test $(NCPUS) -gt 1; then echo `expr $(NCPUS) + 1`; \
               else echo $(NCPUS); fi)
endif
VENDOR=Debian

DEB_HOST_MULTIARCH  = $(shell dpkg-architecture -qDEB_HOST_MULTIARCH)
DEB_HOST_GNU_TYPE   = $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_HOST_ARCH_BITS  = $(shell dpkg-architecture -qDEB_HOST_ARCH_BITS)
DEB_HOST_ARCH       = $(shell dpkg-architecture -qDEB_HOST_ARCH)


confargs := \
        CC=$(DEB_HOST_GNU_TYPE)-gcc-$(GCC_VERSION) CXX=$(DEB_HOST_GNU_TYPE)-g++-$(GCC_VERSION) \
        CPP=$(DEB_HOST_GNU_TYPE)-cpp-$(GCC_VERSION) \
        --with-c-include-dirs=/usr/include/$(DEB_HOST_MULTIARCH):/usr/include/$(DEB_HOST_GNU_TYPE):/usr/include \
	--with-cxx-include-root=/usr/include/c++/$(GCC_VERSION) \
	--with-cxx-include-arch=$(DEB_HOST_GNU_TYPE) \
	--host=$(DEB_HOST_GNU_TYPE) --build=$(DEB_BUILD_GNU_TYPE)

ifeq ($(shell dpkg-architecture -qDEB_HOST_ARCH_BITS),64)
  confargs += --with-cxx-include-32bit-dir=32
else
  confargs += --with-cxx-include-64bit-dir=64
endif

opt_flags = -g -O2
ifneq (,$(findstring $(DEB_HOST_ARCH),armel))
  opt_flags += -marm
endif


%:
	dh $@

debian/%: debian/%.in
	sed -e 's|@DEB_HOST_MULTIARCH@|$(DEB_HOST_MULTIARCH)|g' -e "s|@OCAML_STDLIB_DIR@|$(OCAML_STDLIB_DIR)|g" -e "s|@LLVM_VERSION@|$(LLVM_VERSION)|g" $< > $@

override_dh_auto_configure: debian/libclang1-$(LLVM_VERSION).links debian/libclang-$(LLVM_VERSION)-dev.links debian/libclang1-$(LLVM_VERSION).install
	xzcat /usr/src/llvm-$(LLVM_VERSION)/llvm-$(LLVM_VERSION).tar.xz|tar -x -f -
	mkdir -p tools/clang/include/clang/Debian
	mkdir -p $(TARGET_BUILD)
	sed -e "s|@DEB_HOST_MULTIARCH@|$(DEB_HOST_MULTIARCH)|" \
		-e "s|@DEB_HOST_GNU_TYPE@|$(DEB_HOST_GNU_TYPE)|" \
		-e "s|@DEB_PATCHSETVERSION@|$(DEBIAN_REVISION)|" \
		debian/debian_path.h > tools/clang/include/clang/Debian/debian_path.h

# Remove some old symlinks
	cd llvm-$(LLVM_VERSION)/tools/ && \
	if test -h clang; then \
		rm clang; \
	fi; \
    ln -s ../../tools/clang .; \
	readlink clang; \
	if test -h lldb; then \
		rm lldb; \
	fi; \
    ln -s ../../tools/lldb .; \


	cd llvm-$(LLVM_VERSION)/projects/ && \
	if test -h compiler-rt; then \
		rm compiler-rt; \
	fi; \
	ln -s ../../compiler-rt .; \
	readlink compiler-rt

# Start the actual configure
	cd $(TARGET_BUILD) && \
	  ../llvm-$(LLVM_VERSION)/configure $(confargs) \
	--prefix=/usr/ \
	--disable-assertions --enable-shared --enable-optimized \
	--with-optimize-option=' $(opt_flags)' --enable-pic --enable-libffi \
	CLANG_VENDOR=$(VENDOR)	|| { cat config.log; exit 1; }

override_dh_auto_build:
	$(MAKE) $(NJOBS) -C $(TARGET_BUILD) VERBOSE=1 ONLY_TOOLS="clang" CLANG_VENDOR=$(VENDOR) CXXFLAGS=-std=c++0x
# Only available in clang 3.3
#	cd $(CURDIR)/tools/clang/docs && make -f Makefile.sphinx
# && make -f Makefile.sphinx man

override_dh_auto_install:
	chrpath -d build-clang/Release/bin/clang build-clang/Release/bin/clang-check build-clang/Release/bin/clang-tblgen
	$(MAKE) -C $(TARGET_BUILD)  VERBOSE=1  ONLY_TOOLS="clang" install DESTDIR=$(CURDIR)/debian/tmp/
	cd debian/tmp/usr/lib/ && \
	if test ! -f libclang-$(LLVM_VERSION).so.$(SONAME_EXT); then \
		mv libclang.so libclang-$(LLVM_VERSION).so.$(SONAME_EXT) && \
		ln -s libclang-$(LLVM_VERSION).so.$(SONAME_EXT) libclang.so.$(SONAME_EXT); \
	fi
#	cd build-clang/tools/clang/runtime/compiler-rt/ && rm -rf $$(find . -iname "SubDir.lib*" -o -iname .dir) && rm -rf $$(find -empty)
# Create this fake directory to make the install libclang-common-dev happy
# under the unsupported archs of compiler-rt
	mkdir -p $(CURDIR)/debian/tmp/usr/lib/clang/$(LLVM_VERSION)/lib
	mv $(CURDIR)/debian/tmp/usr/share/man/man1/clang.1 $(CURDIR)/debian/tmp/usr/share/man/man1/clang-$(LLVM_VERSION).1
	cp -p $(CURDIR)/debian/man/scan-build.1 $(CURDIR)/debian/tmp/usr/share/man/man1/scan-build-$(LLVM_VERSION).1
	cp -p $(CURDIR)/debian/man/scan-view.1  $(CURDIR)/debian/tmp/usr/share/man/man1/scan-view-$(LLVM_VERSION).1

override_dh_installdeb:
	find $(CURDIR)/debian/python-clang-$(LLVM_VERSION)/usr/share/doc/python-clang-$(LLVM_VERSION)/examples -name "*.gz" -exec gzip -d {} \;
	find $(CURDIR)/debian/python-clang-$(LLVM_VERSION)/usr/share/doc/python-clang-$(LLVM_VERSION)/tests    -name "*.gz" -exec gzip -d {} \;
	if test -d $(CURDIR)/debian/clang-$(LLVM_VERSION)-relaxng/usr/share/xml/clang-$(LLVM_VERSION)-relaxng ; then \
		find $(CURDIR)/debian/clang-$(LLVM_VERSION)-relaxng/usr/share/xml/clang-$(LLVM_VERSION)-relaxng -name "*.gz" -exec gzip -d {} \; ; \
	fi

override_dh_auto_test:
	$(MAKE) -C $(TARGET_BUILD)  check || true

override_dh_auto_clean:
	rm -rf build-clang llvm-$(LLVM_VERSION) tools/clang/include/clang/Debian/debian_path.h
	rm -f `ls debian/*.in|sed -e "s|.in$$||g"`
