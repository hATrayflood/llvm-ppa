Description: Fix defaults to use correct CPU and FPU on armhf
  Clang was defaulting to a rediculously low CPU on armhf, furthermore when
  The correct CPU is selected it defaults to incorrect FPU options for 
  debian. This patch sets the defaults to appropriate values.
Author: Peter Michael Green <plugwash@raspbian.org>
Bug-Debian: http://bugs.debian.org/704111

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- clang-3.2.orig/tools/clang/lib/Driver/Tools.cpp
+++ clang-3.2/tools/clang/lib/Driver/Tools.cpp
@@ -504,6 +504,9 @@ static std::string getARMTargetCPU(const
   if (Arg *A = Args.getLastArg(options::OPT_march_EQ)) {
     // Otherwise, if we have -march= choose the base CPU for that arch.
     MArch = A->getValue();
+  } else if (Triple.getEnvironment() == llvm::Triple::GNUEABIHF) {
+    // Use armv6 for armhf (raspbian version of patch)
+    MArch = "armv7-a";
   } else {
     // Otherwise, use the Arch from the triple.
     MArch = Triple.getArchName();
@@ -786,8 +789,19 @@ void Clang::AddARMTargetArgs(const ArgLi
   }
 
   // Honor -mfpu=.
-  if (const Arg *A = Args.getLastArg(options::OPT_mfpu_EQ))
+  if (const Arg *A = Args.getLastArg(options::OPT_mfpu_EQ)) {
     addFPUArgs(D, A, Args, CmdArgs);
+  } else {
+    if (StringRef(CPUName).startswith("cortex-a")) {
+      //Debian armhf uses vfpv3-d16 
+      CmdArgs.push_back("-target-feature");
+      CmdArgs.push_back("+vfp3");
+      CmdArgs.push_back("-target-feature");
+      CmdArgs.push_back("+d16");
+      CmdArgs.push_back("-target-feature");
+      CmdArgs.push_back("-neon");
+    }
+  }
 
   // Honor -mfpmath=.
   if (const Arg *A = Args.getLastArg(options::OPT_mfpmath_EQ))
